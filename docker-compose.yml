version: '3.8'

services:
  company-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
      - migrate
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/companydb?sslmode=disable
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC_COMPANY_EVENTS=company_events
      - JWT_SECRET=mySecretKey
      - APP_PORT=8080

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: companydb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  migrate:
    image: migrate/migrate
    depends_on:
      - postgres
    entrypoint: ["sh", "-c", "migrate -path /migrations -database ${DATABASE_URL} up"]
    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/companydb?sslmode=disable
    volumes:
      - ./db/migrations:/migrations

  create-topic:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - kafka
    entrypoint: >
      sh -c "
      kafka-topics --create --topic company_events --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 || 
      echo 'Topic already exists';
      sleep infinity
      "

volumes:
  postgres_data:
